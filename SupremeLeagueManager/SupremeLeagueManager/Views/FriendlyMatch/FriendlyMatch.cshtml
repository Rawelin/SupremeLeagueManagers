@model SupremeLeagueManager.Models.FriendlyMatch.FriendlyMatchVM

<link href="~/Content/CSS/TeamManagement.css" rel="stylesheet" />

<div id="friendlyMatchView">
    <div class="col-12 mt-0">
        <div id="friendlyMatch" class="row text-center">
            <div class="col">
                <h1>Friendly Match</h1>
            </div>
        </div>
        <div>
            <div id="squadSelection" style="display: none;">
                @Html.Partial("_SquadSelection")
            </div>
        </div>
        <div id="matchArena" style="display: none;">
            @Html.Partial("_MatchArena")
        </div>
        <div id="teamSelection">
            @Html.Partial("_TeamSelection")
        </div>

        <div id="menuButtons" class="row text-center mt-5">
            <div class="col-3"></div>
            <div class="col-6">
                <div style="display: inline-block">
                    <div style="float: left" id="returnButton">@Html.ActionLink("Main Menu", "Home", "Home", null, new { @class = "btn btn-outline-danger" })</div>
                    <div style="float: left" id="selectTeamRefresh">@Html.ActionLink("Select Team", "FriendlyMatch", "FriendlyMatch", null, new { @class = "btn btn-outline-danger" })</div>
                    <div style="float: left" id="selectTeam" class="btn btn-outline-info" v-on:click="SelectTeam()">Select Team</div>
                    <div style="float: left" class="btn btn-outline-info" v-on:click="ShowSquad()">Squad Selection</div>
                    <div style="float: left" id="playButton" class="btn btn-outline-info" v-on:click="PlayMatch()">Play Match</div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/GlobalFunctions/MatchAlgorithms.js"></script>
<script src="~/Scripts/GlobalFunctions/FormationColors.js"></script>
<script src="~/Scripts/GlobalFunctions/Skills.js"></script>
<script type="text/javascript">

        var vueFriendlyMatch = new Vue({
            el: '#friendlyMatchView',
            data: {
                Provider: {},
                HomeTeam: {},
                AwayTeam: {},
                HomeTeams: [],
                AwayTeams: [],
                HomeIndex: 0,
                AwayIndex: 0,
                Formation: '',
                Index: 10,

                Player: {},
                Selected: [],
                PlayerPhotoIndex: 0,

                MatchStatistics: {}
            },

            methods: {

//-------------------SquadSelection-----------------------------------------

                TeamEmblem: function () {
                    var fulname = this.HomeTeam.Name + this.HomeTeam.City;
                    fulname = fulname.replace(" ", "");
                    return fulname = '/Content/Resources/Emblems/' + fulname + '.png';
                },

                CountryFlag: function (countryName) {
                    this.Player.CountryName = countryName;
                    var src = '/Content/Resources/Flags/' + this.Player.CountryName + '.png';
                    return src;
                },

                GetPlayerPhoto: function () {
                    var fulname = this.HomeTeam.Players[this.PlayerPhotoIndex].Name + this.HomeTeam.Players[this.PlayerPhotoIndex].Surname;
                    fulname = fulname.replace(" ", "");
                    return fulname = '/Content/Resources/Players/' + fulname + '.png';
                },

                HighlightPlayer: function (number) {
                    if (number == this.PlayerPhotoIndex) {
                        return 'grey';
                    }
                },

                GetPlayerName: function (index) {
                    var playerName = this.HomeTeam.Players[index].Name + ' ' + this.HomeTeam.Players[index].Surname;
                    return playerName;
                },

                SkillsColor: function (value) {

                    if (value >= 95) {
                        return 'red';
                    } else if (value >= 90 && value < 95) {
                        return 'indianred';
                    } else if (value >= 80 && value < 90) {
                        return 'orange';
                    } else if (value >= 70 && value < 80) {
                        return 'lightgreen';
                    }
                    else {
                        return 'white';
                    }
                },

                 FormationChange: function (formationId){
                     console.log(formationId);
                    this.FormationColors(formationId);
                     this.Formation = formationId;
                     this.HomeTeam.Formation = formationId;
                    this.SetTeamSkills();
                 },

                FormationColors: function (formationId) {

                    switch (formationId) {
                        case 1:
                            formation442();
                            this.FormationPitch(formationId);
                            break;
                        case 2:
                            formation433();
                            this.FormationPitch(formationId);
                            break;
                        case 3:
                            formation451();
                            this.FormationPitch(formationId);
                            break;
                        case 4:
                            formation352();
                            this.FormationPitch(formationId);
                            break;
                    }
                },

                FormationPitch: function (formation) {

                    this.F442 = this.F433 = this.F451 = this.F352 = true;

                    switch (formation) {
                        case 1:
                            this.F442 = false;
                            break;
                        case 2:
                            this.F433 = false;
                            break;
                        case 3:
                            this.F451 = false;
                            break;
                        case 4:
                            this.F352 = false;
                            break;
                    }
                },

                UserTeamFullName: function () {
                    var fulname = this.HomeTeam.Name + this.HomeTeam.City;
                    fulname = fulname.replace(" ", "");
                    return fulname;
                },

                UserTeamEmblem: function () {
                    var fulname = this.HomeTeam.Name + this.HomeTeam.City;
                    fulname = fulname.replace(" ", "");
                    return fulname = '/Content/Resources/Emblems/' + fulname + '.png';
                },

                NationalityFlag: function (index) {
                    var src = '/Content/Resources/Flags/' + this.HomeTeam.Players[index].CountryName + '.png';
                    return src;
                },

                ProgressBarColor: function (stamina) {

                    if (stamina >= 80) {
                        return 'progress-bar progress-bar-striped progress-bar-animated bg-success';
                    } else if (stamina < 80 && stamina >= 40) {
                        return 'progress-bar progress-bar-striped progress-bar-animated bg-warning';
                    } else if (stamina < 40) {
                        return 'progress-bar progress-bar-striped progress-bar-animated bg-danger';
                    }
                },

                ProgressText: function (stamina) {
                    if (stamina < 40) {
                        return '';
                    } else {
                        return stamina + '%';
                    }
                },

                HoverRow: function () {
                    $('#squadBody tr').hover(
                        function () {
                            this.beforeHover = $(this).css('background-color');
                            $(this).css('background', 'rgba(200, 187, 201, 0.3)');
                        },
                        function () {
                            $(this).css('background', this.beforeHover)
                        });


                },

                ShowPlayerSkills: function (index) {
                    this.Player = this.HomeTeam.Players[index];
                    this.PlayerPhotoIndex = index;

                },

                GetPlayerDynamicSkills: function (index) {
                    var skills = this.HomeTeam.Players[index].AverageDynamicSkills
                    return skills;
                },

                SetPlayersAverageSkills: function () {

                    for (var i = 0; i < this.HomeTeam.Players.length; i++) {
                        PlayerSkills(this.HomeTeam.Players[i]);
                    }
                },

                SetPlayerDynamicSkills: function () {

                    for (var i = 0; i < this.HomeTeam.Players.length; i++) {
                        PlayerSkillsDynamic(this.HomeTeam.Players[i], this.HomeTeam.Formation);
                        if (this.HomeTeam.Players[i].IndexPosition > 10) {
                            this.HomeTeam.Players[i].AverageDynamicSkills = 0;
                        }
                    }
                },

                SetTeamSkills: function () {
                    TeamSkills(this.HomeTeam);
                },

                TShirtsPng: function () {
                    var fulname = this.HomeTeam.Name + this.HomeTeam.City;
                    fulname = fulname.replace(" ", "");
                    return fulname = '/Content/Resources/TShirts/' + fulname + '.png';
                },

                ChangePlayer: function (index) {

                    // if clicked the same player again remove from array
                    if (this.Selected.includes(index)) {
                        const arrayIndex = this.Selected.indexOf(index);
                        if (arrayIndex > -1) {
                            this.Selected.splice(arrayIndex, 1);
                            this.HomeTeam.Players[index].Selected = false
                        }
                    } else { // else add second player to swap
                        this.Selected.push(index);
                        this.HomeTeam.Players[index].Selected = true;
                    }
                    // if array contains 2 player swap them
                    if (this.Selected.length == 2) {

                        // players position in table squadTable of _TeamSqad.cshtml (the same value like field L.P of [SLM].[dbo].[dictTeamsPlayers] )
                        var playerOne = this.Selected.shift();
                        var playerTwo = this.Selected.shift();

                        // swap indexPosition L.P.
                        var indexPositionPlayerTmp = this.HomeTeam.Players[playerOne].IndexPosition
                        this.HomeTeam.Players[playerOne].IndexPosition = this.HomeTeam.Players[playerTwo].IndexPosition;
                        this.HomeTeam.Players[playerTwo].IndexPosition = indexPositionPlayerTmp;

                        // swap players position
                        var PlayerTmp = this.HomeTeam.Players[playerOne];
                        this.HomeTeam.Players[playerOne] = this.HomeTeam.Players[playerTwo];
                        this.HomeTeam.Players[playerTwo] = PlayerTmp;

                        // restore inputs checbox to unchecked
                        this.HomeTeam.Players[playerOne].Selected = false;
                        this.HomeTeam.Players[playerTwo].Selected = false;

                        this.SetPlayerDynamicSkills();
                        this.SetTeamSkills();
                        this.SetPlayersAverageSkills();

                        // send changes to DB
                        //this.SwapPlayer(this.Team.Players[playerOne], this.Team.Players[playerTwo]);
                    }
                },

 //--------------------TeamSelection----------------------------------------
                HomeTeamEmblem: function (index) {
                    var src = '/Content/Resources/Emblems/' + this.HomeTeams[this.Index].Name + this.HomeTeams[this.Index].City + '.png';
                    src = src.replace(" ", "");
                    return src;
                },

                AwayTeamEmblem: function (index) {
                    var src = '/Content/Resources/Emblems/' + this.HomeTeams[index].Name + this.HomeTeams[index].City + '.png';
                    src = src.replace(" ", "");
                    return src;
                },

                HomeNextTeam: function () {
                    if (this.HomeIndex < this.HomeTeams.length - 1) {
                        this.HomeIndex++;
                    } else {
                        this.HomeIndex = 0;
                    }
                    this.HomeTeam = this.HomeTeams[this.HomeIndex];
                    TeamSkills(this.HomeTeam);
                    console.log(this.HomeTeam.Defence);
                },

                HomePreviousTeam: function () {
                    this.HomeIndex--;
                    if (this.HomeIndex == -1) {
                        this.HomeIndex = 17;
                    }
                    this.HomeTeam = this.HomeTeams[this.HomeIndex];
                    TeamSkills(this.HomeTeam);
                    console.log(this.HomeIndex);
                },

                AwayNextTeam: function () {
                    if (this.AwayIndex < this.AwayTeams.length - 1) {
                        this.AwayIndex++;
                    } else {
                        this.AwayIndex = 0;
                    }
                    this.AwayTeam = this.AwayTeams[this.AwayIndex];
                    TeamSkills(this.AwayTeam);
                },

                AwayPreviousTeam: function () {
                    this.AwayIndex--;
                    if (this.AwayIndex == -1) {
                        this.AwayIndex = 17;
                    }
                    this.AwayTeam = this.AwayTeams[this.AwayIndex];
                    TeamSkills(this.AwayTeam);
                },

                GetHomeTeamId: function (id) {
                    this.HomeTeamId = id;
                },

                GetAwayTeamId: function (id) {
                    this.AwayTeamId = id;
                },

                DefaultTeams: function () {
                    this.HomeTeam = this.HomeTeams[10];
                    this.AwayTeam = this.AwayTeams[0];

                    TeamSkills(this.HomeTeam);
                    TeamSkills(this.AwayTeam);
                },

                SelectTeam: function () {
                    $("#teamSelection").show(300);
                    $("#matchArena").hide(300);
                    $("#squadSelection").hide(300);
                },

                ShowSquad: function () {
                    this.Provider.HomeTeam = this.HomeTeam;
                    this.Provider.AwayTeam = this.AwayTeam;

                    $('#teamSelection').hide(300);
                    $("#matchArena").hide(300);
                    $("#squadSelection").show(300);

                    //$.ajax(
                    //    {
                    //        url: "_SquadSelection/FriendlyMatch",
                    //        type: "POST",
                    //        contentType: "application/json",
                    //        data: JSON.stringify({ provider: this.Provider }),
                    //        success: function (data) {
                    //            if (data != null) {

                    //            } else {
                    //                alert(data.ErrorMessage)
                    //            }
                    //        },
                    //        error: function () {
                    //            alert('Nieoczekiwany błąd');
                    //        }
                    //    })
                        //.done(function (partialViewResult) {
                        //    $('#teamSelection').hide(300);
                        //    $("#matchArena").hide(300);
                        //    $("#squadSelection").show(300);
                        //    $("#squadSelection").html(partialViewResult);
                        //});
                },

                PlayMatch: function () {

                    $("#teamSelection").hide(300);
                    $("#squadSelection").hide(300);
                    $("#selectTeam").hide();
                    $("#matchArena").show(300);
                    $("#selectTeamRefresh").show();
                    this.RandomMatchLength();

                    //this.Provider.HomeTeam = this.HomeTeam;
                    //this.Provider.AwayTeam = this.AwayTeam;

                    //$.ajax(
                    //    {
                    //        url: "_MatchArena/FriendlyMatch",
                    //        type: "POST",
                    //        contentType: "application/json",
                    //        data: JSON.stringify({ provider: this.Provider }),
                    //        success: function (data) {
                    //            if (data != null) {
                    //                $('#squadButton').hide();
                    //                $('#selectTeam').hide();
                    //                $('#playButton').hide();
                    //                $('#squadMatchButton').show();
                    //                $('#selectTeamRefresh').show();
                    //            } else {
                    //                alert(data.ErrorMessage)
                    //            }
                    //        },
                    //        error: function () {
                    //            alert('Nieoczekiwany błąd');
                    //        }
                    //    })
                    //    .done(function (partialViewResult) {
                    //         $("#teamSelection").hide(300);
                    //         $("#squadSelection").hide(300);
                    //         $("#matchArena").show(300);
                    //         $("#matchArena").html(partialViewResult);
                    //});
                },

                FormationMenu: function () {
                    $('#dashboard').hover(
                        function () {
                            $(this).stop().animate(
                                {
                                    right: '-10',
                                },
                                500,
                                'easeInSine'
                            );
                        },
                        function () {
                            $(this).stop().animate(
                                {
                                    right: '-110',
                                },
                                1500,
                                'easeOutBounce'
                            );
                        });
                },
 //---------MatchArena----------------------------------------------------------------
                HomeTeamEmblemMatch: function () {
                    var src = '/Content/Resources/Emblems/' + this.HomeTeam.Name + this.HomeTeam.City + '.png';
                    src = src.replace(" ", "");
                    return src;
                },

                AwayTeamEmblemMatch: function () {
                    var src = '/Content/Resources/Emblems/' + this.AwayTeam.Name + this.AwayTeam.City + '.png';
                    src = src.replace(" ", "");
                    return src;
                },

                StartMatch: function () {
                    this.MatchStatistics.IntervalId = setInterval(this.CounterStart, 3200);
                    $('#pauseMatch').show(300);
                    $('#startMatch').hide(300);
                },

                PauseMatch: function () {
                    clearInterval(this.MatchStatistics.IntervalId);
                    $('#pauseMatch').hide(300);
                    $('#startMatch').show(300);
                },

                CounterStart: function () {
                    this.MatchStatistics.Counter++;
                    if (this.MatchStatistics.Counter == this.MatchStatistics.MatchLength) {
                        this.PauseMatch();
                        $('#startMatch').hide(300);
                    } else if (this.MatchStatistics.Counter == (this.MatchStatistics.MatchLength / 2).toFixed(0)) {
                        this.PauseMatch();
                       
                    }
                    this.MatchAlgorithms();
                },

                RandomMatchLength: function () {
                    this.MatchStatistics.MatchLength = Math.floor(Math.random() * 6) + 90
                },

                MatchAlgorithms: function () {
                    MatchAlhorithms(this.HomeTeam, this.AwayTeam, this.MatchStatistics, this.IntervalId)
                },
 //-----------------------------------------------------------------------------------
                ScrollOff: function () {
                    $("body").css("overflow", "hidden");
                    $("body").css("overflow-x", "hidden");
                    $("body").css("overflow-y", "hidden");
                },

                Jquery: function () {
                    $('#selectTeamRefresh').hide();
                    $('#commentHome').hide();
                    $('#commentAway').hide();
                }
            },

            created: function () {
                this.HomeTeams = @Html.Raw(Json.Encode(Model.Teams));
                this.AwayTeams = @Html.Raw(Json.Encode(Model.Teams));
                this.MatchStatistics = @Html.Raw(Json.Encode(Model.MatchStatistics));

                this.DefaultTeams();
                this.FormationPitch(this.Formation);
                this.SetTeamSkills();
                this.SetPlayerDynamicSkills();
            },

            mounted: function () {
                this.SetPlayersAverageSkills();
                this.ScrollOff();
                this.FormationColors(this.HomeTeam.Formation);
                this.HoverRow();
                this.FormationMenu();
                this.Jquery();
                this.MatchStatistics.LiveMatch = true;
            }
        });

</script>
