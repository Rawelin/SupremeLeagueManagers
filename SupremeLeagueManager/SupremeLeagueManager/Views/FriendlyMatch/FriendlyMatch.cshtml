@model SupremeLeagueManager.Models.FriendlyMatch.FriendlyMatchVM

    <div id="friendlyMatchView">
        <div class="container">
            <div class="row text-center mt-3">
                <div class="col">
                    <h1>Friendly Match</h1>
                </div>
            </div>
            <div class="row mt-5" id="squadSelection">
                <div class="col">
                    <div id="carouselExampleIndicatorsHome" class="carousel slide" data-ride="carousel" data-interval="false">
                        <div class="carousel-inner text-center">
                            <div class="carousel-item active" alt="first slide" v-on:click="ShowTeamSquad(1)">
                                <img v-bind:src="HomeTeamEmblem(0)" width="256" height="256" />
                            </div>
                            <div class="carousel-item" alt="first slide" v-for="(team, index) in HomeTeams" v-if="index">
                                <img v-bind:src="HomeTeamEmblem(index)" width="256" height="256" />
                            </div>
                        </div>
                        <a class="carousel-control-prev" href="#carouselExampleIndicatorsHome" role="button" data-slide="prev" v-on:click="HomePreviousTeam()">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="sr-only">Previous</span>
                        </a>
                        <a class="carousel-control-next" href="#carouselExampleIndicatorsHome" role="button" data-slide="next" v-on:click="HomeNextTeam()">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="sr-only">Next</span>
                        </a>
                    </div>
                </div>
                <div class="col text-center" style="height: 10em;">
                    <h3 style="margin-top: 5em;">Vs</h3>
                </div>
                <div class="col">
                    <div id="carouselExampleIndicatorsAway" class="carousel slide" data-ride="carousel" data-interval="false">
                        <div class="carousel-inner text-center">
                            <div class="carousel-item active" alt="first slide">
                                <img v-bind:src="AwayTeamEmblem(0)" width="256" height="256" />
                            </div>
                            <div class="carousel-item" alt="first slide" v-for="(team, index) in AwayTeams" v-if="index">
                                <img v-bind:src="AwayTeamEmblem(index)" width="256" height="256" />
                            </div>
                        </div>
                        <a class="carousel-control-prev" href="#carouselExampleIndicatorsAway" role="button" data-slide="prev" v-on:click="AwayPreviousTeam()">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="sr-only">Previous</span>
                        </a>
                        <a class="carousel-control-next" href="#carouselExampleIndicatorsAway" role="button" data-slide="next" v-on:click="AwayNextTeam()" >
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="sr-only">Next</span>
                        </a>
                    </div>
                </div>
            </div>
            <div class="row text-center mt-5">
                <div class="col">
                    <div>@Html.ActionLink("Main Menu", "Home", "Home", null, new { @class = "btn btn-outline-info" })</div>
                </div>
                <div class="col">
                    <div class="btn btn-outline-info" v-on:click="ShowSquad()">Squad</div>
                </div>
                <div class="col">
                    <div class="btn btn-outline-info"  v-on:click="PlayMatch()">Play</div>
                </div>

            </div>
        </div>
    </div>

    <script type="text/javascript">

        var vueFriendlyMatch = new Vue({
            el: '#friendlyMatchView',
            data: {
                HomeTeams: [],
                AwayTeams: [],
                HomeTeamId: 1,
                AwayTeamId: 1,
            },

            methods: {

                HomeTeamEmblem: function (index, id) {
                    var src = '/Content/Resources/Emblems/' + this.HomeTeams[index].Name + this.HomeTeams[index].City + '.png';
                    src = src.replace(" ", "");
                    return src;
                },

                AwayTeamEmblem: function (index,) {
                    var src = '/Content/Resources/Emblems/' + this.HomeTeams[index].Name + this.HomeTeams[index].City + '.png';
                    src = src.replace(" ", "");
                    return src;
                },

                HomeNextTeam: function () {
                    if (this.HomeTeamId < this.HomeTeams.length) {
                        this.HomeTeamId++;
                    } else {
                        this.HomeTeamId = 1;
                    }

                    console.log(this.HomeTeamId);
                },

                HomePreviousTeam: function () {
                    this.HomeTeamId--;
                    if (this.HomeTeamId == 0) {
                        this.HomeTeamId = 18;
                    } 

                    console.log(this.HomeTeamId);
                },

                AwayNextTeam: function () {
                    if (this.AwayTeamId < this.AwayTeams.length) {
                        this.AwayTeamId++;
                    } else {
                        this.AwayTeamId = 1;
                    }
                    console.log(this.AwayTeamId + 'a');
                },

                AwayPreviousTeam: function () {
                    this.AwayTeamId--;
                    if (this.AwayTeamId == 0) {
                        this.AwayTeamId = 18;
                    }
                    console.log(this.AwayTeamId + 'a');
                },

                ShowSquad: function () {
                    $('#squadSelection').effect('explode');
                    //alert('H: ' + this.HomeTeamId);
                },

                PlayMatch: function () {
                    $('#squadSelection').effect('explode');
                    //alert('H: ' + this.HomeTeamId + '-' + 'A: ' + this.AwayTeamId);
                },


                GetHomeTeamId: function (id) {
                    this.HomeTeamId = id;
                },

                GetAwayTeamId: function (id) {
                    this.AwayTeamId = id;
                },
            },

            created: function () {
                this.HomeTeams = @Html.Raw(Json.Encode(Model.Teams));
                this.AwayTeams = @Html.Raw(Json.Encode(Model.Teams));
            },

            mounted: function () {
            }


        });


    </script>
