@model SupremeLeagueManager.Models.FriendlyMatch.FriendlyMatchVM

<link href="~/Content/CSS/TeamManagement.css" rel="stylesheet" />

<div id="friendlyMatchView">
    <div class="container">
        <div id="friendlyMatch" class="row text-center mt-3">
            <div class="col">
                <h1>Friendly Match</h1>
            </div>
        </div>
        @*squad selection --------------------------------------------------*@
        <div id="squadSelection" style="display: none;">
            @Html.Partial("_SquadSelection")
        </div>
        @*team selection carousels -----------------------------------------*@
        <div id="teamSelection">
            @Html.Partial("_TeamSelection")
        </div>
        @*match arena ------------------------------------------------------*@
        <div id="matchArena" style="display: none;">
            @Html.Partial("_MatchArena")
        </div>
        @*menu buttons -----------------------------------------------------*@
        <div id="menuButtons" class="row text-center mt-5">
            <div class="col">
                <div id="returnButton">@Html.ActionLink("Main Menu", "Home", "Home", null, new { @class = "btn btn-outline-info" })</div>
            </div>
            <div class="col">
                <div id="squadButton" class="btn btn-outline-info" v-on:click="ShowSquad()">Squad Selection</div>
            </div>
            <div class="col">
                <div id="selectTeam" class="btn btn-outline-info" v-on:click="SelectTeam()">Select Team</div>
            </div>
            <div class="col">
                <div id="playButton" class="btn btn-outline-info" v-on:click="PlayMatch()">Play Match</div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

        var vueFriendlyMatch = new Vue({
            el: '#friendlyMatchView',
            data: {
                Provider: {},
                HomeTeam: {},
                AwayTeam: {},
                HomeTeams: [],
                AwayTeams: [],
                HomeIndex: 0,
                AwayIndex: 0,
            },

            methods: {

                HomeTeamEmblem: function (index) {
                    var src = '/Content/Resources/Emblems/' + this.HomeTeams[index].Name + this.HomeTeams[index].City + '.png';
                    src = src.replace(" ", "");
                    return src;
                },

                AwayTeamEmblem: function (index) {
                    var src = '/Content/Resources/Emblems/' + this.HomeTeams[index].Name + this.HomeTeams[index].City + '.png';
                    src = src.replace(" ", "");
                    return src;
                },

                HomeNextTeam: function () {
                    if (this.HomeIndex < this.HomeTeams.length - 1) {
                        this.HomeIndex++;
                    } else {
                        this.HomeIndex = 0;
                    }
                    this.HomeTeam = this.HomeTeams[this.HomeIndex];
                    console.log(this.HomeTeam.Name);
                },

                HomePreviousTeam: function () {
                    this.HomeIndex--;
                    if (this.HomeIndex == -1) {
                        this.HomeIndex = 17;
                    }
                    this.HomeTeam = this.HomeTeams[this.HomeIndex];
                    console.log(this.HomeIndex);
                },

                AwayNextTeam: function () {
                    if (this.AwayIndex < this.AwayTeams.length - 1) {
                        this.AwayIndex++;
                    } else {
                        this.AwayIndex = 0;
                    }
                    this.AwayTeam = this.AwayTeams[this.AwayIndex];
                    console.log(this.AwayIndex + 'a');
                },

                AwayPreviousTeam: function () {
                    this.AwayIndex--;
                    if (this.AwayIndex == -1) {
                        this.AwayIndex = 17;
                    }
                    this.AwayTeam = this.AwayTeams[this.AwayIndex];
                    console.log(this.AwayIndex + 'a');
                },

                GetHomeTeamId: function (id) {
                    this.HomeTeamId = id;
                },

                GetAwayTeamId: function (id) {
                    this.AwayTeamId = id;
                },

                DefaultTeams: function () {
                    this.HomeTeam = this.HomeTeams[0];
                    this.AwayTeam = this.AwayTeams[0];
                },

                SelectTeam: function () {
                    $("#teamSelection").show(300);
                    $("#matchArena").hide(300);
                    $("#squadSelection").hide(300);
                },

                ShowSquad: function () {
                    //alert('h: ' + this.HomeTeamId);
                    $.ajax(
                        {
                            url: "_SquadSelection/FriendlyMatch",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify({ provider: this.Provider }),
                            success: function (data) {
                                if (data != null) {

                                } else {
                                    alert(data.ErrorMessage)
                                }
                            },
                            error: function () {
                                alert('Nieoczekiwany błąd');
                            }
                        })
                        .done(function (partialViewResult) {
                            $('#teamSelection').hide(300);
                            $("#matchArena").hide(300);
                            $("#squadSelection").show(300);
                            $("#squadSelection").html(partialViewResult);
                        });
                },

                PlayMatch: function () {
                    //alert('H: ' + this.HomeTeamId + '-' + 'A: ' + this.AwayTeamId);
                    this.Provider.HomeTeam = this.HomeTeam;
                    this.Provider.AwayTeam = this.AwayTeam; 

                    $("#teamSelection").hide(300);
                    $("#squadSelection").hide(300);
                    $("#matchArena").show(300);

                    $.ajax(
                        {
                            url: "_MatchArena/FriendlyMatch",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify({ provider: this.Provider }),
                            success: function (data) {
                                if (data != null) {

                                } else {
                                    alert(data.ErrorMessage)
                                }
                            },
                            error: function () {
                                alert('Nieoczekiwany błąd');
                            }
                        });
                      

                },

                ScrollOff: function () {
                    $("body").css("overflow", "hidden");
                    $("body").css("overflow-x", "hidden");
                    $("body").css("overflow-y", "hidden");
                }
            },

            created: function () {
                this.HomeTeams = @Html.Raw(Json.Encode(Model.Teams));
                this.AwayTeams = @Html.Raw(Json.Encode(Model.Teams));
            },

            mounted: function () {
                this.ScrollOff();
                this.DefaultTeams();
            }
        });

</script>
