<link href="~/Content/CSS/SinglePlayer.css" rel="stylesheet" />
<link href="~/Content/CSS/SinglePlayer_Squad.css" rel="stylesheet" />
<link href="~/Content/CSS/SinglePlayer_Calendar.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vue-slider-component@latest/theme/default.css">
<script src="https://cdn.jsdelivr.net/npm/vue-slider-component@latest/dist/vue-slider-component.umd.min.js"></script>

<div id="singlePlayerView" class="site-settings" style="display: none">
    <div class="wrapper">
        <div class="aside">
            <nav class="mt-1">
                <a id="1" v-on:click="Menu(1)">Squad</a>
                <a id="2" v-on:click="Menu(2)">Training</a>
                <a id="3" v-on:click="Menu(3)">Finance</a>
                <a id="4" v-on:click="Menu(4)">Calendar</a>
                <a id="5" v-on:click="Menu(5)">Table</a>
                <a id="6" v-on:click="Menu(6)">Statistic</a>
                <a id="7" v-on:click="Menu(7)">Fixture</a>
                <a class="loadingModal" href="@Url.Action("Home", "Home")">Exit</a>
            </nav>
        </div>
        <div class="content" id="content">
            <div class="text-center wrapper-small">
                <div><img v-bind:src="EmblemName(Team.Name, Team.City)" alt="Emblem" /></div>
                <div>
                    <table class="table table-dark table-striped table-sm table-standing mt-5">
                        <tbody>
                            <tr>
                                <td>Team</td>
                                <td> {{ Team.Name }} {{ Team.City }} </td>
                            </tr>
                            <tr>
                                <td>First Name</td>
                                <td> {{ User.FirstName }} </td>
                            </tr>
                            <tr>
                                <td>Last Name</td>
                                <td>{{ User.LastName }} </td>
                            </tr>
                            <tr>
                                <td>Season</td>
                                <td> {{ SinglePlayer.Season }}</td>
                            </tr>
                            <tr>
                                <td>Weak</td>
                                <td> {{ SinglePlayer.Week }}</td>
                            </tr>
                            <tr>
                                <td>Day</td>
                                <td> {{ SinglePlayer.Day }}</td>
                            </tr>
                            <tr>
                                <td>Position</td>
                                <td> {{ Position }}</td>
                            </tr>
                            <tr>
                                <td>Won/Drawn/Lost</td>
                                <td> {{ Team.Won }} / {{ Team.Drawn }} / {{ Team.Lost }} </td>
                            </tr>
                            <tr>
                                <td>Points</td>
                                <td> {{ Team.Points }}</td>
                            </tr>
                        </tbody>
                    </table>
                </div>

            </div>

        </div>
    </div>
</div>

<script src="~/Scripts/GlobalFunctions/Skills.js"></script>
<script type="text/javascript">
    var vueSinglePlayer = new Vue({
        el: '#singlePlayerView',
        data: {
            Teams: [],
            Table: [],
            Fixtures: [],
            SinglePlayer: {},
            User: {},
            Team: {},
            Position: 0
        },

        methods: {

            EmblemName: function (name, city) {
                var fulName = name + city;
                fulName = fulName.replace(" ", "");
                return fulName = '/Content/Resources/Emblems/' + fulName + '.png';
            },

            Menu: function (id) {
                var str;
                switch (id) {
                    case 1:
                        str = "_Squad/SinglePlayer";
                        break;
                    case 2:
                        str = "_Training/SinglePlayer";
                        break;
                    case 3:
                        str = "_Finance/SinglePlayer";
                        break;
                    case 4:
                        str = "_Calendar/SinglePlayer";
                        break;
                    case 5:
                        str = "_Table/SinglePlayer";
                        break;
                    case 6:
                        str = "_Statistic/SinglePlayer";
                        break;
                    case 7:
                        str = "_Fixture/SinglePlayer";
                        break;
                }
                this.ClassSwitcher(id);
                this.Partial(str);
            },

            ClassSwitcher: function (id) {
                for (var i = 1; i < 8; i++) {
                    $('#'+i).removeClass('clicked')
                }
                $('#' + id).addClass('clicked');
            },

            Partial: function (str) {
                $.ajax({
                    url: str,
                    type: "GET",
                    contentType: "application/json",
               }).done(function (partialViewResult) {
                    $("#content").html(partialViewResult);
               })
            },

            ScrollOff: function () {
                $("body").css("overflow", "hidden");
                $("body").css("overflow-x", "hidden");
                $("body").css("overflow-y", "hidden");
             }
       },
        created: function () {
           this.Teams =  @Html.Raw(Json.Encode(Model.Teams));
           this.SinglePlayer =  @Html.Raw(Json.Encode(Model.SinglePlayer));
           this.User =  @Html.Raw(Json.Encode(Model.User));
           this.Table =  @Html.Raw(Json.Encode(Model.Table));

           this.Team = this.Table.find(t => t.IdDictTeams == this.SinglePlayer.IdTeam);
           this.Position = this.Table.findIndex(t => t.IdDictTeams == this.SinglePlayer.IdTeam) + 1;


       },

       mounted: function () {
           this.ScrollOff();
           $('#singlePlayerView').show()
       },
    });

</script>

