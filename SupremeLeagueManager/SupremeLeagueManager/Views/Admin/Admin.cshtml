@model SupremeLeagueManager.Models.Admin.AdminVM

@{
    ViewBag.Title = "Admin";
}

<div id="adminView">
    <div class="row" style="margin-top: 1em;">
        <div class="col-xl-10 offset-xl-1">
            <div class="d-flex justify-content-start">
                <div class="p-1">
                    <button type="button" class="btn btn-outline-info" v-on:click="ChangeTab(1)" style="width: 10em;"> Teams </button>
                </div>
                <div class="p-1">
                    <button type="button" class="btn btn-outline-info" v-on:click="ChangeTab(2)" style="width: 10em;"> Team players </button>
                </div>
                <div class="p-1">
                    <a class="btn btn-outline-info" href="@Url.Action("TeamTest", "TeamTest")" style="width: 10em;">Team Test &raquo;</a>
                </div>
            </div>
        </div>
    </div>

    @*Teams*@
    <div v-if="IdTab == 1">

    </div>
    @*Team players*@
    <div v-else-if="IdTab == 2">
        <div class="row" style="padding-top: 2em;">
            @*Menu --> Left side*@
            <div class="col-xl-2">
                <div class="d-flex justify-content-center" style="padding-left: 3em;">
                    <div class="p-2">
                        <h4><i> Team: </i></h4>
                    </div>
                </div>
                <div v-for="i in dictTeams">
                    <div class="d-flex justify-content-center" style="padding-left: 3em;">
                        <div class="p-1">
                            <button type="button" class="btn btn-outline-info btn-sm" v-on:click="ChangeTeam(i.Id)" style="width: 14em; font-size: 14px; padding: 4px 0px 4px 0px;"> {{i.Description}} </button>
                        </div>
                    </div>
                </div>

            </div>

            @*Team players*@
            <div class="col-xl-9">
                <div v-if="IdDictTeams != 0" class="d-flex justify-content-center">
                    <div class="p-1">
                        <button class="btn btn-outline-primary" v-on:click="ModalShow()" style="width: 14em; font-size: 14px;"> New player </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--Modal - Add new player -->
    <div id="newPlayerModal" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <p class="modal-title" style="font-weight: bold;"><i> Add new user </i></p>
                </div>
                <div class="modal-body" style="font-size: 12px;">
                    @*<div class="row">
            <div class="col-xl-6">*@
                    <div class="d-flex justify-content-start">
                        <div class="p-1" style="width: 9em;">
                            <i> Country: </i>
                        </div>
                        <div class="p-1">
                            <select class="" v-model="teamPlayer.IdDictCountries" v-on:change="ChangeCountry()">
                                <option v-for="(value, key) in dictCountries" :value="value.Id" :key="key"> {{value.Description}} </option>
                            </select>
                        </div>
                    </div>
                    <div class="d-flex justify-content-start">
                        <div class="p-1" style="width: 9em;">
                            <i> Position: </i>
                        </div>
                        <div class="p-1">
                            <select class="" v-model="teamPlayer.IdDictPositions" v-on:change="ChangePosition()">
                                <option v-for="(value, key) in dictPositions" :value="value.Id" :key="key"> {{value.Description}} </option>
                            </select>
                        </div>
                    </div>
                    <div class="d-flex justify-content-start">
                        <div class="p-1" style="width: 9em;">
                            <i> Birth date: </i>
                        </div>
                        <div class="p-1">
                            <input type="date" v-model="teamPlayer.BirthDate" />
                        </div>
                    </div>
                    <div class="d-flex justify-content-start">
                        <div class="p-1" style="width: 9em;">
                            <i> First name: </i>
                        </div>
                        <div class="p-1">
                            <input type="text" v-model="teamPlayer.FirstName" />
                        </div>
                    </div>
                    <div class="d-flex justify-content-start">
                        <div class="p-1" style="width: 9em;">
                            <i> Last name: </i>
                        </div>
                        <div class="p-1">
                            <input type="text" v-model="teamPlayer.LastName" />
                        </div>
                    </div>
                    @*<div class="d-flex justify-content-start">
                <div class="p-1" style="width: 9em;">
                    <i> Left foot skills: </i>
                </div>
                <div class="p-1">
                    <input type="number" v-model="teamPlayer.LeftFootSkills" min="0" step="1"/>
                </div>
            </div>
            <div class="d-flex justify-content-start">
                <div class="p-1" style="width: 9em;">
                    <i> Right foot skills: </i>
                </div>
                <div class="p-1">
                    <input type="number" v-model="teamPlayer.RightFootSkills" min="0" step="1" />
                </div>
            </div>
            <div class="d-flex justify-content-start">
                <div class="p-1" style="width: 9em;">
                    <i> Goal keeper: </i>
                </div>
                <div class="p-1">
                    <input type="number" v-model="teamPlayer.GoalKeeper" min="0" step="0.01" />
                </div>
            </div>
            <div class="d-flex justify-content-start">
                <div class="p-1" style="width: 9em;">
                    <i> Defence: </i>
                </div>
                <div class="p-1">
                    <input type="number" v-model="teamPlayer.Defence" min="0" step="0.01" />
                </div>
            </div>
            <div class="d-flex justify-content-start">
                <div class="p-1" style="width: 9em;">
                    <i> Midfield: </i>
                </div>
                <div class="p-1">
                    <input type="number" v-model="teamPlayer.Midfield" min="0" step="0.01" />
                </div>
            </div>
            <div class="d-flex justify-content-start">
                <div class="p-1" style="width: 9em;">
                    <i> Attack: </i>
                </div>
                <div class="p-1">
                    <input type="number" v-model="teamPlayer.Attack" min="0" step="0.01" />
                </div>
            </div>
            <div class="d-flex justify-content-start">
                <div class="p-1" style="width: 9em;">
                    <i> Diving: </i>
                </div>
                <div class="p-1">
                    <input type="number" v-model="teamPlayer.Diving" min="0" step="0.01" />
                </div>
            </div>
            <div class="d-flex justify-content-start">
                <div class="p-1" style="width: 9em;">
                    <i> Handling: </i>
                </div>
                <div class="p-1">
                    <input type="number" v-model="teamPlayer.Handling" min="0" step="0.01" />
                </div>
            </div>
            <div class="d-flex justify-content-start">
                <div class="p-1" style="width: 9em;">
                    <i> Tackling: </i>
                </div>
                <div class="p-1">
                    <input type="number" v-model="teamPlayer.Tackling" min="0" step="0.01" />
                </div>
            </div>*@
                    @*</div>*@

                    @*<div class="col-xl-6">
                <div class="d-flex justify-content-start">
                    <div class="p-1" style="width: 9em;">
                        <i> Covering: </i>
                    </div>
                    <div class="p-1">
                        <input type="number" v-model="teamPlayer.Covering" min="0" step="0.01" />
                    </div>
                </div>
                <div class="d-flex justify-content-start">
                    <div class="p-1" style="width: 9em;">
                        <i> Long pass accuracy: </i>
                    </div>
                    <div class="p-1">
                        <input type="number" v-model="teamPlayer.LongPassAccuracy" min="0" step="0.01" />
                    </div>
                </div>
                <div class="d-flex justify-content-start">
                    <div class="p-1" style="width: 9em;">
                        <i> Short pass accuracy: </i>
                    </div>
                    <div class="p-1">
                        <input type="number" v-model="teamPlayer.ShortPassAccuracy" min="0" step="0.01" />
                    </div>
                </div>
                <div class="d-flex justify-content-start">
                    <div class="p-1" style="width: 9em;">
                        <i> Shot accuracy </i>
                    </div>
                    <div class="p-1">
                        <input type="number" v-model="teamPlayer.ShotAccuracy" min="0" step="0.01" />
                    </div>
                </div>
                <div class="d-flex justify-content-start">
                    <div class="p-1" style="width: 9em;">
                        <i> Speed: </i>
                    </div>
                    <div class="p-1">
                        <input type="number" v-model="teamPlayer.Speed" min="0" step="0.01" />
                    </div>
                </div>
                <div class="d-flex justify-content-start">
                    <div class="p-1" style="width: 9em;">
                        <i> Acceleration: </i>
                    </div>
                    <div class="p-1">
                        <input type="number" v-model="teamPlayer.Acceleration" min="0" step="0.01" />
                    </div>
                </div>
                <div class="d-flex justify-content-start">
                    <div class="p-1" style="width: 9em;">
                        <i> Reflex: </i>
                    </div>
                    <div class="p-1">
                        <input type="number" v-model="teamPlayer.Reflex" min="0" step="0.01" />
                    </div>
                </div>
                <div class="d-flex justify-content-start">
                    <div class="p-1" style="width: 9em;">
                        <i> Heading: </i>
                    </div>
                    <div class="p-1">
                        <input type="number" v-model="teamPlayer.Heading" min="0" step="0.01" />
                    </div>
                </div>
                <div class="d-flex justify-content-start">
                    <div class="p-1" style="width: 9em;">
                        <i> Shot power: </i>
                    </div>
                    <div class="p-1">
                        <input type="number" v-model="teamPlayer.ShotPower" min="0" step="0.01" />
                    </div>
                </div>
                <div class="d-flex justify-content-start">
                    <div class="p-1" style="width: 9em;">
                        <i> Technique: </i>
                    </div>
                    <div class="p-1">
                        <input type="number" v-model="teamPlayer.Technique" min="0" step="0.01" />
                    </div>
                </div>
                <div class="d-flex justify-content-start">
                    <div class="p-1" style="width: 9em;">
                        <i> Endurance: </i>
                    </div>
                    <div class="p-1">
                        <input type="number" v-model="teamPlayer.Endurance" min="0" step="0.01" />
                    </div>
                </div>
                <div class="d-flex justify-content-start">
                    <div class="p-1" style="width: 9em;">
                        <i> Stamina: </i>
                    </div>
                    <div class="p-1">
                        <input type="number" v-model="teamPlayer.Stamina" min="0" step="0.01" />
                    </div>
                </div>

                @*<div class="d-flex justify-content-start">
                    <div class="p-1" style="width: 9em;">
                        <i> Average skills: </i>
                    </div>
                    <div class="p-1">
                        <input type="number" v-model="teamPlayer.AverageSkills" min="0" step="0.01" />
                    </div>
                </div>
                <div class="d-flex justify-content-start">
                    <div class="p-1" style="width: 9em;">
                        <i> Average dynamic skills: </i>
                    </div>
                    <div class="p-1">
                        <input type="number" v-model="teamPlayer.AverageDynamicSkills" min="0" step="0.01" disabled/>
                    </div>
                </div>
            </div>*@
                </div>
                <div class="modal-footer align-content-center">
                    <button class="btn btn-outline-danger" v-on:click="ModalHide()"> Save </button>
                </div>
            </div>

            </div>
        </div>
    </div>

</div>

<script>
    var vueAdmin = new Vue({
        el: '#adminView',

        data: {
            IdTab: 0,
            IdDictTeams: 0,

            dictTeams: [],
            dictCountries: [],
            dictPositions: [],

            teamPlayers: [],

            teamPlayer: {},

            IdCountry: {},
            IdPosition: {}
        },

        methods: {
            ModalShow: function () {
                $('#newPlayerModal').slideDown(600);
            },

            ModalHide: function () {
                $.ajax({
                    url: "@Url.Action("AddPlayer", "Admin")",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ teamPlayer: vueAdmin.teamPlayer }),

                    success: function (data) {
                        if (data == 0) {
                            alert("Error !");
                        }
                        else if (data == 1) {
                            vueAdmin.ChangeTeam(vueAdmin.IdDictTeams);
                            $('#newPlayerModal').hide(300);
                        }
                        else {
                            $('#newPlayerModal').hide(300);
                        }                    
                    },

                    error: function () {
                        alert("Error, try again later !");
                    }
                })

                $('#newPlayerModal').hide(300);
            },

            ChangeTab: function (IdTab) {
                vueAdmin.IdTab = IdTab;
            },

            ChangeTeam: function (IdDictTeams) {
                vueAdmin.IdDictTeams = IdDictTeams;
                vueAdmin.teamPlayer.IdDictTeams = IdDictTeams;

                $.ajax({
                    url: "@Url.Action("GetTeamPlayers", "Admin")",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ IdDictTeams: IdDictTeams }),

                    success: function (data) {
                        vueAdmin.teamPlayers = [];
                        vueAdmin.teamPlayers = data.slice();
                    },

                    error: function () {
                        alert("Error, try again later !");
                    }
                })
            },

            ChangeCountry: function () {

            },

            ChangePosition: function () {

            },

        },

        watch: {

        },

        computed: {

        },

        computed: {

        },

        beforeCreate: function () {

        },

        created: function () {

        },

        beforeMount() {

        },

        mounted() {
            this.dictTeams = @Html.Raw(Json.Encode(Model.dictTeams));
            this.teamPlayer = @Html.Raw(Json.Encode(Model.teamPlayer));

            this.dictCountries = @Html.Raw(Json.Encode(Model.dictCountries));
            this.dictPositions = @Html.Raw(Json.Encode(Model.dictPositions));
        },

        update() {

        }
    })
</script>

