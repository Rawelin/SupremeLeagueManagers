@model SupremeLeagueManager.Models.TeamTest.TeamTestVM

@if (!(@Model.Team.Name is null))
{
    <div class="row ml-5 mt-5 justify-content-start">
        <div class="col-md-4">
            <table class="table table-bordered table-striped table-sm" id="squadTable">
                <tr>
                    <th colspan="5" class="text-center">
                        <div style="display: inline-block; float:left"><img src="~/Content/Resources/Emblems/@Model.Team.GetEmblemsName()" width="50" height="50" /></div>
                        <div style="display: inline-block;"><div style="font-size:25px">@Model.Team.GetFullName()</div></div>
                        <div style="display: inline-block; float:right"><img src="~/Content/Resources/Emblems/@Model.Team.GetEmblemsName()" width="50" height="50" /></div>
                    </th>
                </tr>
                <tr class="text-center">
                    <th style="width: 40%">Name</th>
                    <th style="width: 20%">Position</th>
                    <th style="width: 20%">Nationality</th>
                    <th>Age</th>
                    <th>Skills</th>
                </tr>
                @for (int i = 0; i < Model.Team.Players.Count; i++)
                {
                    <tr class="text-center" onmouseover="showPlayerSkills('@i')">
                        <td class="text-left">@Model.Team.Players.ElementAt(i).GetFullName()</td>
                        <td>@Model.Team.Players.ElementAt(i).Position</td>
                        <td>@Model.Team.Players.ElementAt(i).Nationality</td>
                        <td>@Model.Team.Players.ElementAt(i).Age</td>
                        <td> @Html.Raw(String.Format("{0:####}", @Model.Team.Players.ElementAt(i).GetAverageSkils()))</td>
                    </tr>
                }
            </table>
        </div>
        <div class="col-md-2" id="playerSkills" style="visibility: hidden;">
            <table class="table table-bordered table-striped table-sm" id="playerSkillsTable">
                <tr>
                    <td style="width:50%">Name</td>
                    <td class="text-center" id="nameForSkillsTable"></td>
                </tr>
                <tr>
                    <td>Surname</td>
                    <td class="text-center" id="surnameForSkillsTable"></td>
                </tr>
                <tr>
                    <td>Position</td>
                    <td class="text-center" id="positionForSkillsTable"></td>
                </tr>
                <tr>
                    <td>Nationality</td>
                    <td class="text-center" id="nationalityForSkillsTable"><img id="flag" src="" width="50" height="30" /></td>
                </tr>
                <tr>
                    <td>Age</td>
                    <td class="text-center" id="ageForSkillsTable"></td>
                </tr>
                <tr>
                    <td>GoalKepper</td>
                    <td class="text-center" id="goalkeeperSkillsTable"></td>
                </tr>
                <tr>
                    <td>Defence</td>
                    <td class="text-center" id="defenceForSkillsTable"></td>
                </tr>
                <tr>
                    <td>Midfield</td>
                    <td class="text-center" id="midfieldForSkillsTable"></td>
                </tr>
                <tr>
                    <td>Attack</td>
                    <td class="text-center" id="attackForSkillsTable"></td>
                </tr>

            </table>

        </div>
        <div class="col-xl-1">
            <table class="table table-bordered table-striped table-sm">
                <tr>
                    <th colspan="2"><img style="visibility:hidden" src="~/Content/Resources/Emblems/@Model.Team.GetEmblemsName()" width="50" height="50" /></th>
                </tr>
                <tr>
                    <th>Goalkepper</th>
                    <td>@Html.Raw(String.Format("{0:##}", @Model.Team.TeamSkillsModel.GoalKeeper))</td>
                </tr>
                <tr>
                    <th>Defence</th>
                    <td></td>
                </tr>
                <tr>
                    <th>Midfield</th>
                    <td></td>
                </tr>
                <tr>
                    <th>Attack</th>
                    <td></td>
                </tr>
                <tr>
                    <th>Speed</th>
                    <td>@Html.Raw(String.Format("{0:##}", @Model.Team.TeamSkillsModel.Speed))</td>
                </tr>
                <tr>
                    <th>Technikue</th>
                    <td>@Html.Raw(String.Format("{0:##}", @Model.Team.TeamSkillsModel.Technicque))</td>
                </tr>
                <tr>
                    <th>Overall</th>
                    <td class="text-center text-danger">@Html.Raw(String.Format("{0:##}", @Model.Team.TeamSkillsModel.Overall))</td>
                </tr>
            </table>
        </div>
        <div class="col-md-2">
            <div class="btn-group" role="group" aria-label="Basic example" id="formationButtons">
                <button class="btn btn-info" id="442">4-4-2</button>
                <button class="btn btn-info" id="443">4-4-3</button>
                <button class="btn btn-info" id="451">4-5-1</button>
                <button class="btn btn-info" id="352">3-5-2</button>
            </div>
        </div>
    </div>

}


<script type="text/javascript">

    var formation = @Html.Raw(Json.Encode(Model.Team.Formation));

    switch (formation) {
        case 1:
           formation442();
           break;
        case 2:
           formation443();
           break;
        case 3:
           formation451();
            break;
        case 4:
           formation352();
           break;
        }

    $(document).ready(function () {

        $('#442').click(function () {
            formation442();
        });
        $('#443').click(function () {
            formation443();
        });
        $('#451').click(function () {
            formation451();
        });
        $('#352').click(function () {
            formation352();
        });
    });

    function formation442() {
        $('#squadTable tr:nth-child(3)').css('background', 'rgba(235, 231, 40, 0.7)');
        for (var i = 4; i < 8; i++) {
            $('#squadTable tr:nth-child(' + i + ')').css('background', 'rgba(56, 158, 43, 0.7)');
        }
        for (var i = 8; i < 12; i++) {
            $('#squadTable tr:nth-child(' + i + ')').css('background', 'rgba(50, 85, 209, 0.7)');
        }
        for (var i = 12; i < 14; i++) {
            $('#squadTable tr:nth-child(' + i + ')').css('background', 'rgba(194, 6, 21, 0.7)');
        }
        $('#formationButtons button').removeClass('active')
        $('#442').addClass('active');
    }

    function formation443() {
        $('#squadTable tr:nth-child(3)').css('background', 'rgba(235, 231, 40, 0.7)');
        for (var i = 4; i < 8; i++) {
            $('#squadTable tr:nth-child(' + i + ')').css('background', 'rgba(56, 158, 43, 0.7)');
        }
        for (var i = 8; i < 11; i++) {
            $('#squadTable tr:nth-child(' + i + ')').css('background', 'rgba(50, 85, 209, 0.7)');
        }
        for (var i = 11; i < 14; i++) {
            $('#squadTable tr:nth-child(' + i + ')').css('background', 'rgba(194, 6, 21, 0.7)');
        }
        $('#formationButtons button').removeClass('active')
        $('#443').addClass('active');
    }

    function formation451() {
        $('#squadTable tr:nth-child(3)').css('background', 'rgba(235, 231, 40, 0.7)');
        for (var i = 4; i < 8; i++) {
            $('#squadTable tr:nth-child(' + i + ')').css('background', 'rgba(56, 158, 43, 0.7)');
        }
        for (var i = 8; i < 13; i++) {
            $('#squadTable tr:nth-child(' + i + ')').css('background', 'rgba(50, 85, 209, 0.7)');
        }
        for (var i = 13; i < 14; i++) {
            $('#squadTable tr:nth-child(' + i + ')').css('background', 'rgba(194, 6, 21, 0.7)');
        }
        $('#formationButtons button').removeClass('active')
        $('#451').addClass('active');
    }

    function formation352() {
        $('#squadTable tr:nth-child(3)').css('background', 'rgba(235, 231, 40, 0.7)');
        for (var i = 4; i < 7; i++) {
            $('#squadTable tr:nth-child(' + i + ')').css('background', 'rgba(56, 158, 43, 0.7)');
        }
        for (var i = 7; i < 12; i++) {
            $('#squadTable tr:nth-child(' + i + ')').css('background', 'rgba(50, 85, 209, 0.7)');
        }
        for (var i = 12; i < 14; i++) {
            $('#squadTable tr:nth-child(' + i + ')').css('background', 'rgba(194, 6, 21, 0.7)');
        }
        $('#formationButtons button').removeClass('active')
        $('#352').addClass('active');
    }

    function showPlayerSkills(id) {

        var players = @Html.Raw(Json.Encode(Model.Team.Players));

        $('#playerSkills').css("visibility", "visible");
        $('#nameForSkillsTable').text(players[id].Name);
        $('#surnameForSkillsTable').text(players[id].Surname);
        $('#positionForSkillsTable').text(players[id].Position);
        $('#ageForSkillsTable').text(players[id].Age);
        $('#flag').attr('src', '/Content/Resources/Flags/' + players[id].Nationality + '.png');
        $('#goalkeeperSkillsTable').text(players[id].GoalKeeper);
        $('#defenceForSkillsTable').text(players[id].Defence);
        $('#midfieldForSkillsTable').text(players[id].Midfield);
        $('#attackForSkillsTable').text(players[id].Attack);
    }
</script>





